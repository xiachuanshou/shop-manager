<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  	http://www.springframework.org/schema/aop 
  	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	   default-autowire="byName">
	
	<!--druid-->
	<bean id="shopMasterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}"/>
		<property name="url" value="${jdbc.shop.master.url}"/>
		<property name="username" value="${jdbc.shop.master.username}"/>
		<property name="password" value="${jdbc.shop.master.password}"/>
		<property name="initialSize" value="5"/>
		<property name="minIdle" value="5"/>
		<property name="maxActive" value="10"/>
		<property name="timeBetweenEvictionRunsMillis" value="5000"/>
		<property name="minEvictableIdleTimeMillis" value="60000"/>
		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="1800"/>
		<property name="logAbandoned" value="true"/>
		<property name="filters" value="stat"/>
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=100"/>
	</bean>
	<bean id="shopSlaveDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	<property name="driverClassName" value="${jdbc.driverClass}"/>
		<property name="url" value="${jdbc.shop.slave.url}"/>
		<property name="username" value="${jdbc.shop.slave.username}"/>
		<property name="password" value="${jdbc.shop.slave.password}"/>
		<property name="initialSize" value="5"/>
		<property name="minIdle" value="5"/>
		<property name="maxActive" value="10"/>
		<property name="timeBetweenEvictionRunsMillis" value="5000"/>
		<property name="minEvictableIdleTimeMillis" value="30000"/>
		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="1800"/>
		<property name="logAbandoned" value="true"/>
		<property name="filters" value="stat"/>
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=100"/>
	</bean>
 
	<!-- 配置DynamicDataSource代替普通memberSource，将实际数据源的DataSource赋值给它 -->
	<bean id="shopDataSource" class="com.xialiu.shop.database.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="shopMasterDataSource" value-ref="shopMasterDataSource"/>
				<entry key="shopSlaveDataSource" value-ref="shopSlaveDataSource"/>
			</map>
		</property>
  
        <!-- 默认主库 -->
		<property name="defaultTargetDataSource" ref="shopMasterDataSource"/>
	</bean>

	<!-- 配置数据库注解aop,mapper层选择数据源 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
 
    <bean id="multiDataSourceAspect" class="com.xialiu.shop.database.DataSourceAspect">
        <!-- 执行事物切面时默认使用的数据源（通常配置为项目的主数据库的主库）。如果不配置，将默认使用上面的defaultTargetDataSource -->
        <property name="defaultTransDb" value="shopMasterDataSource" />
        <!-- 以下是默认配置，一般无需修改 -->
        <!-- CUD【创建（Create）、更新（Update）和删除（Delete）】所使用的数据源。默认使用 {主库} -->
        <!-- <property name="cudDBSuffix" value="MasterDataSource" /> -->
        <!-- R【读取（Read）】所使用的数据源。默认使用 {从库} -->
        <!-- <property name="readDBSuffix" value="SlaveDataSource" /> -->
    </bean>
    
	<aop:config>
		<aop:aspect ref="multiDataSourceAspect" >
            <!-- 为DAO层的Mapper自动选择数据源：默认规则是select开头的方法选择从库，其他像update、insert等方法选择主库。
                 可更改multiDataSourceAspect的slaveSuffix的值来改变默认策略 -->
			<aop:pointcut id="daoDataSourceAutoSelect" expression="execution(* com.xialiu.*.dao.*.mapper.*.*(..))"/>
			<aop:before pointcut-ref="daoDataSourceAutoSelect" method="before"/>
			<aop:after pointcut-ref="daoDataSourceAutoSelect" method="after"/>

            <!-- 为事务控制自动选择数据源：扫描有@Transactional注解的service方法，默认切换到上面配置的defaultTransDb数据源去执行事务。
                 如果要切换其他数据源，可以在方法上再加一个@SpecifyDS({value})，在value中注明是哪个数据源ID -->
            <aop:pointcut id="transDataSourceAutoSelect" expression="execution(* com.xialiu.*.domain.*.*(..))"/>
            <aop:before pointcut-ref="transDataSourceAutoSelect" method="beforeTrans"/>
            <aop:after pointcut-ref="transDataSourceAutoSelect" method="after"/>
		</aop:aspect>
	</aop:config>

	<!-- 定义事务管理器  -->
	<bean id="shopTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="shopDataSource" />
		<!-- <qualifier value="seller"/> -->
	</bean>
	
	<!-- 事务支持注解  -->
	<tx:annotation-driven transaction-manager="shopTransactionManager"/>
	<!--编程式事务使用-->
	<bean id="txDefinition" class="org.springframework.transaction.support.DefaultTransactionDefinition"></bean>
</beans>